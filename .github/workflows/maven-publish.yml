name: ci
on:
  push:
    branches: ["master"]   # or main

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Build the JAR first (Quarkus Dockerfile.jvm expects target/quarkus-app/**)
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Maven package
        run: mvn -B -DskipTests package

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=sha,format=short
            type=ref,event=branch

      - name: Show target layout
        run: |
          ls -la target
          find target -maxdepth 2 -type d -print

      - name: Build and push (Quarkus JVM)
                - name: Show target layout
                run: |
                  ls -la target
                  find target -maxdepth 2 -type d -print
        uses: docker/build-push-action@v6
        with:
          context: .                                   # repo root (has pom.xml, target/)
          file: src/main/docker/Dockerfile.jvm        # <- use one of: Dockerfile.jvm | Dockerfile.legacy-jar | Dockerfile.native
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Set output image
        id: img
        run: echo "image=${{ fromJSON(steps.meta.outputs.json).tags[0] }}" >> "$GITHUB_OUTPUT"

      - name: Write image tag to file
        run: echo "${{ steps.img.outputs.image }}" > image-tag.txt

      - name: Upload image tag artifact
        uses: actions/upload-artifact@v4
        with:
          name: image-tag
          path: image-tag.txt
